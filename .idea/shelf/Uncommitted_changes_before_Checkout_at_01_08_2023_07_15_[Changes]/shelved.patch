Index: Client/src/main/java/de/shgruppe/tischkicker/client/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.shgruppe.tischkicker.client;\r\nimport com.google.gson.Gson;\r\nimport tischkicker.models.Spiel;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.io.IOException;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.nio.charset.StandardCharsets;\r\n\r\npublic class Client {\r\n\r\n    public static void main(String[] args) {\r\n        String apiUrl = \"http://localhost:8080/teams\"; // Hier die API-URL einsetzen\r\n        String apiUrl2 = \"http://localhost:8080/spiele\";\r\n        try {\r\n\r\n            // Gson-Objekt zum Serialisieren von JSON erstellen\r\n            Gson gson = new Gson();\r\n            String jsonData = gson.toJson(TeamManager.getTeamManagers());\r\n\r\n            // HTTP-Client erstellen\r\n            HttpClient httpClient = HttpClient.newHttpClient();\r\n\r\n            // HTTP-POST-Anfrage erstellen und konfigurieren\r\n            HttpRequest request = HttpRequest.newBuilder()\r\n                    .uri(URI.create(apiUrl))\r\n                    .header(\"Content-Type\", \"application/json\")\r\n                    .header(\"Accept\", \"application/json\")\r\n                    .POST(HttpRequest.BodyPublishers.ofString(jsonData, StandardCharsets.UTF_8))\r\n                    .build();\r\n\r\n            //HTTP-GET-Anfrage erstellen\r\n            HttpRequest requestSpieler = HttpRequest.newBuilder()\r\n                    .uri(URI.create(apiUrl2))\r\n                    .header(\"Content-Type\", \"application/json\")\r\n                    .header(\"Accept\", \"application/json\")\r\n                    .GET()\r\n                    .build();\r\n\r\n\r\n\r\n            // Die Anfrage an die API senden und die Antwort erhalten\r\n            HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\r\n            HttpResponse<String> responseSpieler = httpClient.send(requestSpieler, HttpResponse.BodyHandlers.ofString());\r\n\r\n            // Den HTTP-Statuscode der Antwort überprüfen\r\n            int statusCode = response.statusCode();\r\n            if (statusCode == 200) {\r\n                // Die JSON-Antwort verarbeiten\r\n                String responseBody2 = responseSpieler.body();\r\n                String responseBody = response.body();\r\n                System.out.println(\"API-Antwort:\");\r\n                System.out.println(responseBody);\r\n\r\n                Spiel[] spielArray = gson.fromJson(responseBody2, Spiel[].class);\r\n                List<Spiel> spiele = Arrays.asList(spielArray);\r\n            } else {\r\n                System.out.println(\"Fehler bei der API-Anfrage. Response Code: \" + statusCode);\r\n            }\r\n\r\n        } catch (IOException | InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Client/src/main/java/de/shgruppe/tischkicker/client/Client.java b/Client/src/main/java/de/shgruppe/tischkicker/client/Client.java
--- a/Client/src/main/java/de/shgruppe/tischkicker/client/Client.java	(revision 4afa80da0069497115251c9141d6561ac4e17430)
+++ b/Client/src/main/java/de/shgruppe/tischkicker/client/Client.java	(date 1690866516853)
@@ -1,14 +1,16 @@
 package de.shgruppe.tischkicker.client;
+
 import com.google.gson.Gson;
 import tischkicker.models.Spiel;
-import java.util.Arrays;
-import java.util.List;
+
 import java.io.IOException;
 import java.net.URI;
 import java.net.http.HttpClient;
 import java.net.http.HttpRequest;
 import java.net.http.HttpResponse;
 import java.nio.charset.StandardCharsets;
+import java.util.Arrays;
+import java.util.List;
 
 public class Client {
 
@@ -25,21 +27,16 @@
             HttpClient httpClient = HttpClient.newHttpClient();
 
             // HTTP-POST-Anfrage erstellen und konfigurieren
-            HttpRequest request = HttpRequest.newBuilder()
-                    .uri(URI.create(apiUrl))
-                    .header("Content-Type", "application/json")
-                    .header("Accept", "application/json")
-                    .POST(HttpRequest.BodyPublishers.ofString(jsonData, StandardCharsets.UTF_8))
-                    .build();
+            HttpRequest request = HttpRequest.newBuilder().uri(URI.create(apiUrl))
+                                             .header("Content-Type", "application/json")
+                                             .header("Accept", "application/json")
+                                             .POST(HttpRequest.BodyPublishers.ofString(jsonData, StandardCharsets.UTF_8))
+                                             .build();
 
             //HTTP-GET-Anfrage erstellen
-            HttpRequest requestSpieler = HttpRequest.newBuilder()
-                    .uri(URI.create(apiUrl2))
-                    .header("Content-Type", "application/json")
-                    .header("Accept", "application/json")
-                    .GET()
-                    .build();
-
+            HttpRequest requestSpieler = HttpRequest.newBuilder().uri(URI.create(apiUrl2))
+                                                    .header("Content-Type", "application/json")
+                                                    .header("Accept", "application/json").GET().build();
 
 
             // Die Anfrage an die API senden und die Antwort erhalten
@@ -57,7 +54,8 @@
 
                 Spiel[] spielArray = gson.fromJson(responseBody2, Spiel[].class);
                 List<Spiel> spiele = Arrays.asList(spielArray);
-            } else {
+            }
+            else {
                 System.out.println("Fehler bei der API-Anfrage. Response Code: " + statusCode);
             }
 
@@ -65,5 +63,5 @@
             e.printStackTrace();
         }
     }
-    }
+}
 
